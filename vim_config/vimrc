" Pre-setup
set nocompatible
filetype off

" Set runtime path to include Vundle
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" Vundle installation - https://github.com/VundleVim/Vundle.vim
Plugin 'VundleVim/Vundle.vim'

" Install plugins
Plugin 'scrooloose/syntastic'
Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/nerdcommenter'
Plugin 'fatih/vim-go'
Plugin 'vim-airline/vim-airline'
Plugin 'Raimondi/delimitMate'
Plugin 'ctrlpvim/ctrlp.vim'

" Auto-completion, snippet engine and snippets
Plugin 'ervandew/supertab'
Plugin 'Valloric/YouCompleteMe'
Plugin 'ternjs/tern_for_vim'
Plugin 'SirVer/ultisnips'
Plugin 'honza/vim-snippets'

" Color Scheme Plugins
Plugin 'morhetz/gruvbox'
Plugin 'elzr/vim-json'

" Javascript Plugins
Plugin 'jelera/vim-javascript-syntax'
Plugin 'pangloss/vim-javascript'
Plugin 'nathanaelkane/vim-indent-guides'
Plugin 'maksimr/vim-jsbeautify'

" JSX Plugins
Plugin 'mxw/vim-jsx'

" Rust Plugins
Plugin 'rust-lang/rust.vim'

" Git Plugins
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-surround'

" Vundle - Plugin installation end
call vundle#end()

" Change leader to comma
let mapleader=","

" Generic settings
filetype plugin indent on
set number
set cursorline
set clipboard=unnamed
set encoding=utf-8
set nowrap
set hlsearch
set ignorecase
set smartcase
set nowritebackup
set nobackup
set noswapfile

" Quick ESC
imap jk <ESC>

" Tab settings
set tabstop=4
set softtabstop=4
set shiftwidth=4
set expandtab

" Save file
noremap <leader>, :update<CR>

" Limit syntax highlighting for long lines, avoid performance issues
set synmaxcol=128 
if !has('nvim')
    set ttyscroll=10
endif

" Syntax highlighting
colorscheme gruvbox
set background=dark
syntax enable

" NERDTree settings
map <C-n> :NERDTreeToggle<CR> 
let NERDTreeShowHidden = 1
" expand to the path of the file in the current buffer
nmap <silent> <leader>y :NERDTreeFind<cr>

" Tab between windows
noremap <tab> <c-w><c-w>

" Delete without yanking
nnoremap <leader>d "_d
vnoremap <leader>d "_d

" Replace currently selected text with default register
" without yanking it
vnoremap <leader>p "_dP

" Ctrlp settings
nmap <silent> <leader>r :CtrlPBuffer<cr>
let g:ctrlp_map = '<leader>t'
let g:ctrlp_dotfiles = 1
let g:ctrlp_working_path_mode = 'ra'
let g:ctrlp_user_command = ['.git', 'cd %s && git ls-files -co --exclude-standard']
let g:ctrlp_custom_ignore = 'node_modules\|DS_Store\|git'

" Enable tern shortcuts and hints
let g:tern_map_keys = 1
let g:tern_show_argument_hints = 'on_hold'

" YouCompleteMe and UltiSnips settings
let g:SuperTabDefaultCompletionType    = '<C-n>'
let g:SuperTabCrMapping                = 0
let g:UltiSnipsExpandTrigger           = '<tab>'
let g:UltiSnipsJumpForwardTrigger      = '<tab>'
let g:UltiSnipsJumpBackwardTrigger     = '<s-tab>'
let g:UltiSnipsEditSplit               = "vertical"
let g:ycm_key_list_select_completion   = ['<C-j>', '<C-n>', '<Down>']
let g:ycm_key_list_previous_completion = ['<C-k>', '<C-p>', '<Up>']
let g:ycm_autoclose_preview_window_after_completion = 1
let g:ycm_server_python_interpreter    = '/usr/bin/python'

" DelimitMate - Insert new line
imap <C-l> <CR><Esc>O

" Beautify JS
map <leader>rn :call JsBeautify()<CR>
autocmd FileType javascript vnoremap <buffer> <leader>rn :call RangeJsBeautify()<CR>
autocmd FileType json vnoremap <buffer> <leader>rn :call RangeJsonBeautify()<CR>
autocmd FileType jsx vnoremap <buffer> <leader>rn :call RangeJsxBeautify()<CR>
autocmd FileType html vnoremap <buffer> <leader>rn :call RangeHtmlBeautify()<CR>
autocmd FileType css vnoremap <buffer> <leader>rn :call RangeCSSBeautify()<CR>

" Enable JSX code in .js files
let g:jsx_ext_required = 0

" Rust settings
let g:rustfmt_autosave = 1

" Disable auto-commenting except for /*...*/
inoremap <expr> <enter> getline('.') =~ '^\s*//' ? '<enter><esc>S' : '<enter>'
nnoremap <expr> O getline('.') =~ '^\s*//' ? 'O<esc>S' : 'O'
nnoremap <expr> o getline('.') =~ '^\s*//' ? 'o<esc>S' : 'o'

" Airline settings
" Enable the list of buffers
let g:airline#extensions#tabline#enabled = 1
" Show just the filename
let g:airline#extensions#tabline#fnamemod = ':t'

" Fugitive settings
nmap <silent> <leader>gs :Gstatus<cr>
nmap <leader>ge :Gedit<cr>
nmap <silent><leader>gr :Gread<cr>
nmap <silent><leader>gb :Gblame<cr>
nmap <silent><leader>gd :Gdiff<cr>

" Easier buffer management
map <leader>n :bn<cr>
map <leader>b :bp<cr>

" Enable code folding
set foldmethod=indent   
set foldnestmax=10
set nofoldenable
set foldlevel=0

" Space to toggle folds.
nnoremap <Space> za
vnoremap <Space> za

" Automatic formatting
autocmd BufWritePre *.html :%s/\s\+$//e
au BufNewFile * set noeol
au BufRead,BufNewFile *.go set filetype=go

" Format file
nmap <leader>fef ggVG=

" Quit with :Q, without saving
command! -nargs=0 Quit :qa!

" Source BufOnly
source ~/.vimrc_bufonly 
